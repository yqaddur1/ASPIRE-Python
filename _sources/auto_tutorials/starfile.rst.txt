
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_tutorials/starfile.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_tutorials_starfile.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_tutorials_starfile.py:


Starfile
========

.. GENERATED FROM PYTHON SOURCE LINES 6-15

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from aspire.basis import FBBasis3D
    from aspire.noise import AnisotropicNoiseEstimator
    from aspire.reconstruction import MeanEstimator
    from aspire.source import RelionSource








.. GENERATED FROM PYTHON SOURCE LINES 16-22

Sources
-------

Sources are an interface to various backend stores of data (np arrays, starfiles, etc)
They are intended to handle batching data conversion/prep behind the scenes.
Here we load a ".star" file using the RelionSource class

.. GENERATED FROM PYTHON SOURCE LINES 22-33

.. code-block:: default


    source = RelionSource(
        "data/sample_relion_data.star",
        pixel_size=1.338,
        max_rows=10000,
    )

    # Reduce the resolution
    L = 12  # You may try 16 but it takes a significant amount of time.
    source.downsample(L)








.. GENERATED FROM PYTHON SOURCE LINES 34-36

Noise Estimation and Whitening
------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 36-46

.. code-block:: default


    # Estimate noise in the ImageSource instance
    noise_estimator = AnisotropicNoiseEstimator(source)
    # Apply whitening to ImageSource
    source.whiten(noise_estimator.filter)

    # Display subset of the images
    images = source.images[:10]
    images.show()




.. image-sg:: /auto_tutorials/images/sphx_glr_starfile_001.png
   :alt: starfile
   :srcset: /auto_tutorials/images/sphx_glr_starfile_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

      0%|          | 0/1 [00:00<?, ?it/s]    100%|##########| 1/1 [00:00<00:00, 65.25it/s]




.. GENERATED FROM PYTHON SOURCE LINES 47-49

Estimate Mean Volume
--------------------

.. GENERATED FROM PYTHON SOURCE LINES 49-56

.. code-block:: default


    # We'll create a 3D Fourier Bessel Basis corresponding to volume resolution L.
    basis = FBBasis3D((L, L, L))
    # Estimate mean Volume
    mean_estimator = MeanEstimator(source, basis, batch_size=8192)
    mean_est = mean_estimator.estimate()








.. GENERATED FROM PYTHON SOURCE LINES 57-59

Visualize Volume
----------------

.. GENERATED FROM PYTHON SOURCE LINES 59-78

.. code-block:: default


    # MeanEstimator.estimate() returns a Volume Instance,
    #   which is wrapper on an ndarray representing a stack of one or more 3d volumes.
    # We will visualize the data via orthogonal projections along the three axes.

    vol = mean_est[0]
    # Visualize volume
    L = vol.shape[0]
    # Plots
    plt.suptitle("Orthogonal Projections", size=20)
    plt.subplot(1, 3, 1, title="x-axis")
    plt.imshow(np.sum(vol, axis=0), cmap="gray")
    plt.subplot(1, 3, 2, title="y-axis")
    plt.imshow(np.sum(vol, axis=1), cmap="gray")
    plt.subplot(1, 3, 3, title="z-axis")
    plt.imshow(np.sum(vol, axis=2), cmap="gray")
    plt.tight_layout()
    plt.subplots_adjust(top=1.25)
    plt.show()



.. image-sg:: /auto_tutorials/images/sphx_glr_starfile_002.png
   :alt: Orthogonal Projections, x-axis, y-axis, z-axis
   :srcset: /auto_tutorials/images/sphx_glr_starfile_002.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  3.926 seconds)


.. _sphx_glr_download_auto_tutorials_starfile.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: starfile.py <starfile.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: starfile.ipynb <starfile.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
